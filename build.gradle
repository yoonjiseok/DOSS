plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//test 롬복 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	//swagger 사용


	//implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	//implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'



//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	testImplementation 'org.springframework.security:spring-security-test'

	// 타임리프 사용
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// 타임리프에서 시큐리티 사용
//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'

	// Spring Security OAuth2 클라이언트 의존성 추가
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'


}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
// Clean 태스크 설정
//clean {
//	delete file('src/main/generated')
//}

//sourceSets {
//	main {
//		java {
//			srcDirs = ['src/main/java', 'src/main/resources']
//		}
//	}
//}

//def generated = 'src/main/generated'
//
//querydsl {
//	jpa = true
//	querydslSourcesDir = generated
//}
//sourceSets {
//	main.java.srcDir generated
//}
//
//compileQuerydsl{
//	options.annotationProcessorPath = configurations.querydsl // configurations.annotationProcessor
//}